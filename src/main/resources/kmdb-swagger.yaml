swagger: "2.0"
info:
  description: "This is a sample Movie Database server written in Kotlin."
  version: "1.0.0"
  title: "KMDB Movie Database"
host: "localhost:8080"
basePath: "/"
tags:
- name: "movies"
  description: "Details of Movies"
schemes:
- "http"
paths:
  /movies/{id}:
    get:
      tags:
      - "movies"
      summary: "Find Film by ID"
      description: "Returns a single film"
      operationId: "getMovieById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of movie to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Movie"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Movie not found"
  /movies/title/{title}:
    get:
      tags:
      - "movies"
      summary: "Find Films by Title"
      description: "Returns movies whose title contains the supplied word(s)"
      operationId: "getMoviesByTitle"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "title"
        in: "path"
        description: "Word which should appear in the title of the movies"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Movie"
  /movies/actor/{actorName}:
    get:
      tags:
      - "movies"
      summary: "Find Films by Actor"
      description: "Returns movies starring the named actor"
      operationId: "getMoviesByActor"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "actorName"
        in: "path"
        description: "Name of the actor who starred in the movie"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Movie"
  /movies/director/{directorName}:
    get:
      tags:
      - "movies"
      summary: "Find Films by Director"
      description: "Returns movies made by the named director"
      operationId: "getMoviesByDirector"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "directorName"
        in: "path"
        description: "Name of the director who made the movie"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Movie"
  /movies/genre/{genre}:
    get:
      tags:
      - "movies"
      summary: "Find Films by Genre"
      description: "Returns movies in the specified genre"
      operationId: "getMoviesByGenre"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "genre"
        in: "path"
        description: "The name of the genre"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Movie"
  /movies/keyword/{keyword}:
    get:
      tags:
      - "movies"
      summary: "Find Films by Keyword"
      description: "Returns movies with the specified keyword"
      operationId: "getMoviesByKeyword"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "keyword"
        in: "path"
        description: "The name of the keyword"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Movie"
definitions:
  Movie:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "string"
        example: "tt12345678"
      title:
        type: "string"
        example: "The Color Purple"
      director:
        type: "string"
        example: "Steven Spielberg"
      releaseYear:
        type: "integer"
        example: 2011
        required: false
      actors :
        type: "array"
        xml:
          name: "actor"
          wrapped: true
        items:
          type: "string"
          example: "Oprah Winfrey"
      genres :
        type: "array"
        xml:
          name: "genre"
          wrapped: true
        items:
          type: "string"
          example: "Sci-Fi"
      keywords :
        type: "array"
        xml:
          name: "keyword"
          wrapped: true
        items:
          type: "string"
          example: "racial tension"
      imdbUrl :
        type: "string"
        example: "http://www.imdb.com/title/tt12345678"
        required: true
    xml:
      name: "Movie"